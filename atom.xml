<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HXHL&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hxhl.github.io/"/>
  <updated>2020-04-22T09:05:18.308Z</updated>
  <id>http://hxhl.github.io/</id>
  
  <author>
    <name>HXHL</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>深入浅出I3WM</title>
    <link href="http://hxhl.github.io/2020/04/22/I3WM/"/>
    <id>http://hxhl.github.io/2020/04/22/I3WM/</id>
    <published>2020-04-22T00:29:23.000Z</published>
    <updated>2020-04-22T09:05:18.308Z</updated>
    
    <content type="html"><![CDATA[<h1 id="凤头"><a href="#凤头" class="headerlink" title="凤头"></a>凤头</h1><p><strong>我可以从本文中学习到什么</strong>?<br>学习完本文,你将会配置一个漂亮的 I3WM 桌面,并且知道为什么这样配置.</p><p><strong>有什么要求吗?</strong></p><p>本文需要你拥有一点 Linux 基础,比如会使用 VIM.</p><p>让我猜猜你!</p><p>你可能会不少 Linux 命令,但是你用起来没有如 Windows 那个顺手,你知道去安装一个『软件』但是不知道如何去打开一个『软件』,或者不知道去设置『开机自启』.</p><p>你还可能是一个资深的 Linux 用户,已经用过『KDE』或者『Gnome』,但是你想了解一下 I3WM,想学会去配置它.让它贴合你的心.</p><p>本文是在『Manjaro』上做的,但是 I3WM 是 Linux 的『窗口管理器』而并非只属于哪个特定的 Linux 版本,所以理论上本文的内容是可以在其它版本的 Linux 上使用的.</p><p><strong>有多漂亮呢?</strong></p><p>这是一张成品图</p><p><img src="/images/I3WM/finish.png" alt="finish"></p><p>它来自github用户『levinit』所分享的配置,<a href="https://github.com/levinit/i3wm-config" target="_blank" rel="noopener">项目链接</a>.十分感谢他分享自己的配置.</p><p><strong>我只想快一点搞个好看的 I3 主题怎么办?</strong></p><p>那请你使用本主题作者所使用的脚本(url)与看他的<a href="https://levinit.github.io/i3wm-config/" target="_blank" rel="noopener">教程</a>,本文更多是阐述I3WM 与其相关软件更深入的一面和教导你如何使用与配置.</p><h1 id="猪肚"><a href="#猪肚" class="headerlink" title="猪肚"></a>猪肚</h1><p><strong>那我应该怎么做</strong>?</p><p>现在这是我们现在最初的样子</p><p>[暂空,后补]</p><p>我们可以看见,与上面所提到的成本品的区别,我将分别介绍如何实现它们.</p><p><strong>怎么打开终端?</strong></p><p>同时按下『Win 键』和『回车键』.</p><h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p><strong>我该如何设置一张壁纸?</strong></p><p>I3WM 异或者是 Linux 均没有提供壁纸功能,所以我需要使用一款软件『feh』.</p><p><strong>我该如何得到它?</strong></p><p>如果你是『Arch』或者『Manjaro』的用户,可以使用<code>sudo  pacman -S  feh</code></p><p>如果是其它的 Linux 发行版,请使用 相应的包管理器安装该软件.</p><p><strong>我该如何设置一张图片做我的壁纸</strong></p><p><code>feh --bg-scale &quot;图片的路径&quot;</code></p><p>其中<code>--bg-scale</code>参数将会缩放你的图片,使其填满你的桌面.</p><p>如果你不想把缩放,请使用<code>--bg-fill</code></p><p><strong>为什么我重启电脑之后我的壁纸就没有了</strong>?</p><p>如果你有过一些电脑基础,你应该知道『程序自启』这个概念,我们的壁纸程序并没有设置『自启』,我将在下一小节中讲述如何使用.</p><h3 id="I3WM-的配置"><a href="#I3WM-的配置" class="headerlink" title="I3WM 的配置"></a>I3WM 的配置</h3><p>由 Mike Gancarz 所提出的 UNIX 哲学中的第五条</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5.Store data in flat text files.</span><br><span class="line">五.数据应该保存为纯文本文件。</span><br></pre></td></tr></table></figure><p>所以 I3WM 的配置也是保存在一个文本文件之中,你应该使用『VIM』或者其它文本编程器去编辑它们,并没有一个像『Windows』异或者是『MacOS』那样拥有一个『设置面板』.</p><p><strong>那 I3WM 的配置文件在哪里呢?</strong></p><p>它在你的<code>home</code>目录的<code>config</code>的<code>i3</code>文件夹中.如果你知道一点 Linux 知识的话,那你应该知道可以用<code>~</code>代指你的<code>home</code>目录.</p><p>所以你可以使用<code>cd ~/config/i3</code> 来进入你的 I3WM 配置文件目录.</p><p>其中的个名为<code>config</code>的文件就是你的I3WM 的配置文件.</p><p><strong>所以我应该如何让我的壁纸在重启之后不会消失呢?</strong></p><p>I3WM 在启动时就会读取它的配置文件,我们当然希望我们的壁纸跟 I3 一起启动.正好 I3WM 提供了这个功能!</p><p>现在回想一下我们设计壁纸的命令是什么?</p><p>对!是<code>feh --bg-scale &quot;图片的路径&quot;</code></p><p>我们将这段话添加到<code>config</code>文件之中,最好是在末尾!</p><p><code>exec --no-startup-id feh --bg-scale &quot;图片的路径&quot;</code></p><p><strong>我还可以做些什么?</strong></p><p>我觉得你可以举一反三了,<code>exec --no-startup-id 你需要执行的命令</code>,你可以把你想执行的命令加在<code>config</code>这样你的命令就会随着 I3WM 启动所执行了.</p><p>当然如果你的命令很多很长,你可以写在一个 shell文件 之中,然后通过 <code>exec</code>去执行你这个 shell文件 ,同时你可以在后面加上<code>&amp;</code>,让你的 Shell文件 或者 命令 转入到后台执行.不会把 I3WM 阻塞住.</p><p>例如:<code>exec --no-startup-id  ~/请换成shell的名字.sh &amp;</code></p><p><strong><code>--no-startup-id</code> 是什么意思啊?</strong></p><p>有些『脚本』或者『程序』并没有『启动提醒』,就是说它们启动之后并不会告诉系统,我启动好了.这会让你的系统认为我卡住了.导致你的鼠标指针处于忙碌状态.</p><p>这个参数可以解决这种情况.</p><h3 id="终端透明"><a href="#终端透明" class="headerlink" title="终端透明"></a>终端透明</h3><p><strong>我怎么才能把我的终端变成透明的?</strong></p><p>我们在设置壁纸时使用了『feh』,这次我们使用『xcompmgr』这款软件.</p><p><strong>为什么要用到这么多软件啊,有没有『全家桶』呀</strong>?</p><p>我们又要说到 UNIX 哲学了. Doug Mcllroy 这个人,和上面那个不是一个人呀,他提出了三条,其中第一条就是:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.Write programs that do one thing and do it well</span><br><span class="line">一.写一个程序做一件事和把它做好.</span><br></pre></td></tr></table></figure><p>Linux 有太多小而美的软件,几乎没有大而全的软件.因为这一点也不 UNIX.</p><p><strong>我装好了,怎么用呢?</strong></p><p>请在终端中输入<code>xcompmgr &amp;</code>,<code>&amp;</code>是做什么用的,上文提到过了,你可以尝试把<code>&amp;</code>去掉,你就会发现程序运行在 前台 ,导致你的终端不能再输入其它命令了!</p><p><strong>也需要加入到<code>config</code>中让它自启吗?</strong></p><p>完美的一次举一反三!没错!请把这个加入其中<code>exec --no-startup-id xcompmgr &amp;</code></p><p><strong>我可以选择什么终端?</strong></p><p>这里推荐<code>roxterm</code>、<code>xfce-terminal</code>和<code>terminator</code>,因为它们更方便设置透明度.</p><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><p><strong>我可以不用快捷键吗?</strong></p><p>如果你使用的是『KDE』或者『Gnome』这些『窗口管理器』,你或许还可以不学,但是 I3WM 如你所见,并没有什么按钮供你去点击.所以你必须去学习与使用</p><p><strong>我需要要去背很长的快捷键表吗?</strong></p><p>当然不是! 我要教你的是如何设置与查看快捷键.</p><p>继续编辑我们的<code>config</code>,往上走.在最上面我们就能看见</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set $mod Mod4</span><br></pre></td></tr></table></figure><p>这句话是指把 Mod4 键设置$mod.</p><p><strong>Mod4 是哪个键?</strong></p><p>正常情况下是你键盘上那个『Win键』.</p><p><strong><code>$mod</code>是什么?</strong></p><p>我们称之为『Super key』,我通常把这个键和其它键来组成使用快捷键.</p><p><strong>里面有哪些设置好的快捷键?</strong></p><p>我们往下翻翻,就会看见</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bindsym $mod+s layout stacking</span><br><span class="line">bindsym $mod+t layout tabbed</span><br><span class="line">bindsym $mod+c layout toggle split</span><br></pre></td></tr></table></figure><p>如果你没有改动上面所说的$mod,那这里的意思就是说同时按下『Win 键』和『S 键』时,将窗口堆叠模式改成『堆叠式』(stacking).按下『Win 键』和『 T 键』 就是『标签式』(tabbed),而『Win 键』加上『C 键』可以让你在 垂直平铺和水平平铺之间 来回切换.</p><p>动手试试吧,不要光看不用!你会爱上这种操作方式的!绝对会!</p><p><strong>我可以让某个快捷键启动一个程序吗?</strong></p><p>当然!我希望你能在这里继续举一反三!我们把这句添加进去.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bindsym $mod+F2 exec firefox</span><br></pre></td></tr></table></figure><p>我觉得你已经能够理解了!当按下『Win 键』和『 F2 键』时, Firefox 就会启动了!把按键和软件换成你想换的吧!</p><h1 id="豹尾"><a href="#豹尾" class="headerlink" title="豹尾"></a>豹尾</h1><p><strong>我还想要更多的主题,我可以在哪里找到它们?</strong></p><p>你可以在<a href="www.github.com">Github</a>搜索『<a href="https://github.com/search?q=i3wm" target="_blank" rel="noopener">i3wm</a>』,有许多人在上面发布了自己的 config.</p><p>例:</p><p><a href="https://github.com/Algorithm79/Dotfiles_i3" target="_blank" rel="noopener">Dotfiles_i3</a></p><p><img src="/images/I3WM/Dotfiles_i3.png" alt="Dotfiles_i3"></p><p><a href="https://github.com/CSaratakij/i3-rice-rin-shelter" target="_blank" rel="noopener">Rin : shelter</a></p><p>![Rin - shelter](/images/I3WM/Rin - shelter.png)</p><p><a href="https://github.com/TxGVNN/i3-config" target="_blank" rel="noopener">TxGVNN</a></p><p><img src="/images/I3WM/TxGVNN.png" alt="TxGVNN "></p><p><strong>什么是凤头猪肚豹尾?</strong></p><p>语出自元代陶宗仪《南村辍耕录》：『乔吉博学多能，以乐府称，尝云：“作乐府亦有法，曰凤头、猪肚、豹尾六字是也。”大致起要美丽，中要浩荡，结要响亮。尤贵在首尾贯穿，意思清新。苟能若是，斯可以言乐府矣。』</p><p>我希望我的博文能写得『凤头猪肚豹尾』,或许现在我的博文还配不上这六字,但这是我会不断的进步,希望有一天,能配的上这六个字.</p><p>著作权归作者所有。<br>商业转载请联系作者获得授权，非商业转载请注明出处。<br>作者：HXHL<br>链接：<a href="https://hxhl.github.io/2020/04/22/I3WM/">https://hxhl.github.io/2020/04/22/I3WM/</a><br>来源：HXHL’s Blog</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;凤头&quot;&gt;&lt;a href=&quot;#凤头&quot; class=&quot;headerlink&quot; title=&quot;凤头&quot;&gt;&lt;/a&gt;凤头&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;我可以从本文中学习到什么&lt;/strong&gt;?&lt;br&gt;学习完本文,你将会配置一个漂亮的 I3WM 桌面,并且知道为什么这样配置
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>WHAT?HOW?WHY? for VLSM</title>
    <link href="http://hxhl.github.io/2020/03/22/VLSM/"/>
    <id>http://hxhl.github.io/2020/03/22/VLSM/</id>
    <published>2020-03-22T13:36:24.000Z</published>
    <updated>2020-04-22T09:00:41.229Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-What-is-VLSM"><a href="#1-What-is-VLSM" class="headerlink" title="1.What is VLSM"></a>1.What is VLSM</h2><p><strong>什么是VLSM?</strong></p><p>vlsm的中文名叫『可变长子网掩码』,是一种网络技术.</p><h2 id="2-Why-is-VLSM"><a href="#2-Why-is-VLSM" class="headerlink" title="2.Why is VLSM?"></a>2.Why is VLSM?</h2><p>这章不讲原理也不讲怎么用,我们来讲讲VLSM可以帮助我们做什么.</p><p><strong>我们为什么要使用VLSM?</strong></p><p>因为VLSM可以帮助我们节省IP地址,减少网络范围,前者的好处不言自明,后者则可以减轻路由器的负担.</p><p><strong>它是怎么把一个大网络分成几个小网络的?</strong></p><p>在下一章的原理部分,我们会详细的讲述的.</p><h3 id="有类网络与无类网络"><a href="#有类网络与无类网络" class="headerlink" title="有类网络与无类网络"></a>有类网络与无类网络</h3><p><strong>什么样的网络是有类网络呢?</strong></p><p>A类、B类、C类网络就是有类网络,也就是说当一个网络中所有主机的子网掩码都一样时,那么这个网络就是有类网络.</p><p><strong>什么样的网络是无类网络呢?</strong></p><p>一个网络中有任意有一台主机的子网掩码不同于其它主机的子网掩码时,那么这个网络就是无类网络.比如一台主机的子网掩码是255.255.255.240,另一台主机的子网掩码是255.255.255.252</p><p><strong>那有类网络与无类网络在实际应用中有什么区别呢?</strong></p><p>一个网络如果是无类网络,那么它就只能使用RIPv2与OSPF等为无类网络所设计的路由协议,因为这些路由协议,会在路由通信时,带上主机的子网掩码,而RIP等路由协议将认为所有的网络接口都是同样的子网掩网,那么它就不会带上子网掩码.</p><p><strong>那有类网络和无类网络与VLSM有什么关系呢?</strong></p><p>VLSM是通过向子网掩码借位实现的,所以只要使用了VLSM,那么这个网络就是无类网络.</p><h2 id="3-How-is-VLSM"><a href="#3-How-is-VLSM" class="headerlink" title="3.How is VLSM?"></a>3.How is VLSM?</h2><p>了解了VLSM的优点和为什么要使用它,那我们就开始讲解VLSM的原理了.</p><h3 id="VLSM的原理"><a href="#VLSM的原理" class="headerlink" title="VLSM的原理"></a>VLSM的原理</h3><p>IP地址是由网络号与主机号组成的,我们可以通过子网掩码与IP地址进行运算,那我们就可以把一个IP地址分成网络号与主机号.</p><p><img src="/images/VLSM/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="alt"></p><p>如图所示,我们通过把0改成1,那么IP地址所在的IP位就从主机号,变成了网络号的一部分.</p><h3 id="在C类网络上划分"><a href="#在C类网络上划分" class="headerlink" title="在C类网络上划分"></a>在C类网络上划分</h3><p><strong>VLSM可以在哪些网络上使用?</strong></p><p>Vlsm当然可以A类B类任意网络上划分,不过一般来说C类用的更多也更直观.且在学完之后,你也可以在A类B类网络上使用VLSM了.</p><p>我现在将为你展示不同的子网掩码和它与IP地址的联系(在C类网络中).</p><table><thead><tr><th align="center">前缀</th><th align="center">子网掩码</th><th align="center">能用的主机数</th><th align="center">占用IP地址数</th><th align="right">子网掩码(二进制)</th></tr></thead><tbody><tr><td align="center">/24</td><td align="center">0</td><td align="center">254</td><td align="center">256</td><td align="right">00000000</td></tr><tr><td align="center">/25</td><td align="center">128</td><td align="center">126</td><td align="center">128</td><td align="right">10000000</td></tr><tr><td align="center">/26</td><td align="center">192</td><td align="center">62</td><td align="center">64</td><td align="right">11000000</td></tr><tr><td align="center">/27</td><td align="center">224</td><td align="center">30</td><td align="center">32</td><td align="right">11100000</td></tr><tr><td align="center">/28</td><td align="center">240</td><td align="center">14</td><td align="center">16</td><td align="right">11110000</td></tr><tr><td align="center">/29</td><td align="center">248</td><td align="center">6</td><td align="center">8</td><td align="right">11111000</td></tr><tr><td align="center">/30</td><td align="center">252</td><td align="center">2</td><td align="center">4</td><td align="right">11111100</td></tr></tbody></table><p>我们可以根据一个路由接口所需要的主机数,去挑选一个合适大小的子网掩码给你所划分的新网络.</p><p><strong>能不能演示一下怎么划分一个网络</strong></p><p>好的,我现在将划分『192.168.10.0』这个大网络,把它划分成三个小网络.</p><table><thead><tr><th>IP</th><th align="right">图例</th></tr></thead><tbody><tr><td>0</td><td align="right"></td></tr><tr><td>16</td><td align="right">第一个网络-192.168.10.1/27</td></tr><tr><td>32</td><td align="right">———————————————</td></tr><tr><td>48</td><td align="right"></td></tr><tr><td>64</td><td align="right">第二个网络-192.168.10.33/27</td></tr><tr><td>80</td><td align="right">———————————————</td></tr><tr><td>96</td><td align="right">第三个网络-192.168.10.81/28</td></tr><tr><td>112</td><td align="right">———————————————</td></tr><tr><td>128</td><td align="right"></td></tr><tr><td>144</td><td align="right"></td></tr><tr><td>160</td><td align="right"></td></tr><tr><td>176</td><td align="right"></td></tr><tr><td>192</td><td align="right"></td></tr><tr><td>…</td><td align="right">省略</td></tr></tbody></table><p>这样我就得到了三 个小网络</p><table><thead><tr><th align="center">网络</th><th align="center">可用IP范围</th><th align="center">子网掩码</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">192.168.10.2-192.168.10.31</td><td align="center">255.255.255.224</td></tr><tr><td align="center">2</td><td align="center">192.168.10.33-192.168.10.79</td><td align="center">255.255.255.224</td></tr><tr><td align="center">3</td><td align="center">192.168.10.81-192.168.10.111</td><td align="center">255.255.255.240</td></tr></tbody></table><p><strong>为什么可用IP范围头尾少了二个IP</strong></p><p>你观察的真细节,确实如此,这二个IP在网络中另有他用,它们维持着网络,使网络能正常工作,所以不能把这两个IP给其它人.</p><p><strong>划分子网的有什么规则吗?</strong></p><p>有,每一个网络的开始IP必须是它所占有IP地址数量的整数倍,因为这样才能知道这个网络的范围与判断任意一个IP是属于哪一个网络的.</p><p><strong>划分子网有什么技巧吗?</strong></p><p>建议网络自大往小的分划.这样肯定可以让每一个子网的开始IP与结束IP都是相连的,可以减少因为必须是整数的开始所空置的IP.</p><p><strong>每划分一个网络,那么就要失去一个网络的头与尾两个ip,但是如果不把网络进行划分就有254个IP可以使用,而把网络细划就会失去更多的头尾两个IP,导致可用IP比254还要少,为什么反而能节省IP地址?</strong></p><p>确实每划分一个网络,那么这个网络就要使用两个IP去使这个网络能正常使用.</p><p>但是为什么能节省IP地址呢?那是因为路由器有一个要求,即一个路由器的两个接口是不能在同一个网络之中.</p><p>如果不使用VLSM细分网络的话,那么给一个路由器接口分配IP地址至少就要分配一个C类网络,可C类网络可是有254个IP地址可以使用呀.如果路由器用不完254个,那剩余未分配的IP地址就被空置着,且不能被其实接口的主机使用.</p><p>著作权归作者所有。<br>商业转载请联系作者获得授权，非商业转载请注明出处。<br>作者：HXHL<br>链接：<a href="https://hxhl.github.io/2020/03/22/VLSM/">https://hxhl.github.io/2020/03/22/VLSM/</a><br>来源：HXHL’s Blog</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-What-is-VLSM&quot;&gt;&lt;a href=&quot;#1-What-is-VLSM&quot; class=&quot;headerlink&quot; title=&quot;1.What is VLSM&quot;&gt;&lt;/a&gt;1.What is VLSM&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;什么是VLSM?&lt;/stro
      
    
    </summary>
    
    
    
      <category term="计算机网络" scheme="http://hxhl.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="CCNA" scheme="http://hxhl.github.io/tags/CCNA/"/>
    
  </entry>
  
</feed>

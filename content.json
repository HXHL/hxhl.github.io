{"meta":{"title":"HXHL's blog","subtitle":"","description":"","author":"HXHL","url":"http://hxhl.github.io","root":"/"},"pages":[{"title":"about","date":"2020-03-22T12:11:27.000Z","updated":"2020-03-22T12:35:56.513Z","comments":true,"path":"about/index.html","permalink":"http://hxhl.github.io/about/index.html","excerpt":"","text":"欢迎联系我,指出文章的错误与告诉我你的想法.发送邮件到我的邮箱:hdzxhl@qq.com"}],"posts":[{"title":"深入浅出I3WM","slug":"I3WM","date":"2020-04-22T00:29:23.000Z","updated":"2020-04-22T09:00:25.615Z","comments":true,"path":"2020/04/22/I3WM/","link":"","permalink":"http://hxhl.github.io/2020/04/22/I3WM/","excerpt":"","text":"凤头我可以从本文中学习到什么?学习完本文,你将会配置一个漂亮的 I3WM 桌面,并且知道为什么这样配置. 有什么要求吗? 本文需要你拥有一点 Linux 基础,比如会使用 VIM. 让我猜猜你! 你可能会不少 Linux 命令,但是你用起来没有如 Windows 那个顺手,你知道去安装一个『软件』但是不知道如何去打开一个『软件』,或者不知道去设置『开机自启』. 你还可能是一个资深的 Linux 用户,已经用过『KDE』或者『Gnome』,但是你想了解一下 I3WM,想学会去配置它.让它贴合你的心. 本文是在『Manjaro』上做的,但是 I3WM 是 Linux 的『窗口管理器』而并非只属于哪个特定的 Linux 版本,所以理论上本文的内容是可以在其它版本的 Linux 上使用的. 有多漂亮呢? 这是一张成品图 它来自github用户『levinit』所分享的配置,项目链接.十分感谢他分享自己的配置. 我只想快一点搞个好看的 I3 主题怎么办? 那请你使用本主题作者所使用的脚本(url)与看他的教程,本文更多是阐述I3WM 与其相关软件更深入的一面和教导你如何使用与配置. 猪肚那我应该怎么做? 现在这是我们现在最初的样子 [暂空,后补] 我们可以看见,与上面所提到的成本品的区别,我将分别介绍如何实现它们. 怎么打开终端? 同时按下『Win 键』和『回车键』. 壁纸我该如何设置一张壁纸? I3WM 异或者是 Linux 均没有提供壁纸功能,所以我需要使用一款软件『feh』. 我该如何得到它? 如果你是『Arch』或者『Manjaro』的用户,可以使用sudo pacman -S feh 如果是其它的 Linux 发行版,请使用 相应的包管理器安装该软件. 我该如何设置一张图片做我的壁纸 feh --bg-scale &quot;图片的路径&quot; 其中--bg-scale参数将会缩放你的图片,使其填满你的桌面. 如果你不想把缩放,请使用--bg-fill 为什么我重启电脑之后我的壁纸就没有了? 如果你有过一些电脑基础,你应该知道『程序自启』这个概念,我们的壁纸程序并没有设置『自启』,我将在下一小节中讲述如何使用. I3WM 的配置由 Mike Gancarz 所提出的 UNIX 哲学中的第五条 125.Store data in flat text files.五.数据应该保存为纯文本文件。 所以 I3WM 的配置也是保存在一个文本文件之中,你应该使用『VIM』或者其它文本编程器去编辑它们,并没有一个像『Windows』异或者是『MacOS』那样拥有一个『设置面板』. 那 I3WM 的配置文件在哪里呢? 它在你的home目录的config的i3文件夹中.如果你知道一点 Linux 知识的话,那你应该知道可以用~代指你的home目录. 所以你可以使用cd ~/config/i3 来进入你的 I3WM 配置文件目录. 其中的个名为config的文件就是你的I3WM 的配置文件. 所以我应该如何让我的壁纸在重启之后不会消失呢? I3WM 在启动时就会读取它的配置文件,我们当然希望我们的壁纸跟 I3 一起启动.正好 I3WM 提供了这个功能! 现在回想一下我们设计壁纸的命令是什么? 对!是feh --bg-scale &quot;图片的路径&quot; 我们将这段话添加到config文件之中,最好是在末尾! exec --no-startup-id feh --bg-scale &quot;图片的路径&quot; 我还可以做些什么? 我觉得你可以举一反三了,exec --no-startup-id 你需要执行的命令,你可以把你想执行的命令加在config这样你的命令就会随着 I3WM 启动所执行了. 当然如果你的命令很多很长,你可以写在一个 shell文件 之中,然后通过 exec去执行你这个 shell文件 ,同时你可以在后面加上&amp;,让你的 Shell文件 或者 命令 转入到后台执行.不会把 I3WM 阻塞住. 例如:exec --no-startup-id ~/请换成shell的名字.sh &amp; --no-startup-id 是什么意思啊? 有些『脚本』或者『程序』并没有『启动提醒』,就是说它们启动之后并不会告诉系统,我启动好了.这会让你的系统认为我卡住了.导致你的鼠标指针处于忙碌状态. 这个参数可以解决这种情况. 终端透明我怎么才能把我的终端变成透明的? 我们在设置壁纸时使用了『feh』,这次我们使用『xcompmgr』这款软件. 为什么要用到这么多软件啊,有没有『全家桶』呀? 我们又要说到 UNIX 哲学了. Doug Mcllroy 这个人,和上面那个不是一个人呀,他提出了三条,其中第一条就是: 121.Write programs that do one thing and do it well一.写一个程序做一件事和把它做好. Linux 有太多小而美的软件,几乎没有大而全的软件.因为这一点也不 UNIX. 我装好了,怎么用呢? 请在终端中输入xcompmgr &amp;,&amp;是做什么用的,上文提到过了,你可以尝试把&amp;去掉,你就会发现程序运行在 前台 ,导致你的终端不能再输入其它命令了! 也需要加入到config中让它自启吗? 完美的一次举一反三!没错!请把这个加入其中exec --no-startup-id xcompmgr &amp; 我可以选择什么终端? 这里推荐roxterm、xfce-terminal和terminator,因为它们更方便设置透明度. 快捷键我可以不用快捷键吗? 如果你使用的是『KDE』或者『Gnome』这些『窗口管理器』,你或许还可以不学,但是 I3WM 如你所见,并没有什么按钮供你去点击.所以你必须去学习与使用 我需要要去背很长的快捷键表吗? 当然不是! 我要教你的是如何设置与查看快捷键. 继续编辑我们的config,往上走.在最上面我们就能看见 1set $mod Mod4 这句话是指把 Mod4 键设置$mod. Mod4 是哪个键? 正常情况下是你键盘上那个『Win键』. $mod是什么? 我们称之为『Super key』,我通常把这个键和其它键来组成使用快捷键. 里面有哪些设置好的快捷键? 我们往下翻翻,就会看见 123bindsym $mod+s layout stackingbindsym $mod+t layout tabbedbindsym $mod+c layout toggle split 如果你没有改动上面所说的$mod,那这里的意思就是说同时按下『Win 键』和『S 键』时,将窗口堆叠模式改成『堆叠式』(stacking).按下『Win 键』和『 T 键』 就是『标签式』(tabbed),而『Win 键』加上『C 键』可以让你在 垂直平铺和水平平铺之间 来回切换. 动手试试吧,不要光看不用!你会爱上这种操作方式的!绝对会! 我可以让某个快捷键启动一个程序吗? 当然!我希望你能在这里继续举一反三!我们把这句添加进去. 1bindsym $mod+F2 exec firefox 我觉得你已经能够理解了!当按下『Win 键』和『 F2 键』时, Firefox 就会启动了!把按键和软件换成你想换的吧! 豹尾我还想要更多的主题,我可以在哪里找到它们? 你可以在Github搜索『i3wm』,有许多人在上面发布了自己的 config. 例: Dotfiles_i3 Rin : shelter ![Rin - shelter](/Users/hxhl/blog/source/images/I3WM/Rin - shelter.png) TxGVNN ![TxGVNN ](/Users/hxhl/blog/source/images/I3WM/TxGVNN .png) 什么是凤头猪肚豹尾? 语出自元代陶宗仪《南村辍耕录》：『乔吉博学多能，以乐府称，尝云：“作乐府亦有法，曰凤头、猪肚、豹尾六字是也。”大致起要美丽，中要浩荡，结要响亮。尤贵在首尾贯穿，意思清新。苟能若是，斯可以言乐府矣。』 我希望我的博文能写得『凤头猪肚豹尾』,或许现在我的博文还配不上这六字,但这是我会不断的进步,希望有一天,能配的上这六个字. 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。作者：HXHL链接：https://hxhl.github.io/2020/04/22/I3WM/来源：HXHL’s Blog","categories":[],"tags":[]},{"title":"WHAT?HOW?WHY? for VLSM","slug":"VLSM","date":"2020-03-22T13:36:24.000Z","updated":"2020-04-22T09:00:41.229Z","comments":true,"path":"2020/03/22/VLSM/","link":"","permalink":"http://hxhl.github.io/2020/03/22/VLSM/","excerpt":"","text":"1.What is VLSM什么是VLSM? vlsm的中文名叫『可变长子网掩码』,是一种网络技术. 2.Why is VLSM?这章不讲原理也不讲怎么用,我们来讲讲VLSM可以帮助我们做什么. 我们为什么要使用VLSM? 因为VLSM可以帮助我们节省IP地址,减少网络范围,前者的好处不言自明,后者则可以减轻路由器的负担. 它是怎么把一个大网络分成几个小网络的? 在下一章的原理部分,我们会详细的讲述的. 有类网络与无类网络什么样的网络是有类网络呢? A类、B类、C类网络就是有类网络,也就是说当一个网络中所有主机的子网掩码都一样时,那么这个网络就是有类网络. 什么样的网络是无类网络呢? 一个网络中有任意有一台主机的子网掩码不同于其它主机的子网掩码时,那么这个网络就是无类网络.比如一台主机的子网掩码是255.255.255.240,另一台主机的子网掩码是255.255.255.252 那有类网络与无类网络在实际应用中有什么区别呢? 一个网络如果是无类网络,那么它就只能使用RIPv2与OSPF等为无类网络所设计的路由协议,因为这些路由协议,会在路由通信时,带上主机的子网掩码,而RIP等路由协议将认为所有的网络接口都是同样的子网掩网,那么它就不会带上子网掩码. 那有类网络和无类网络与VLSM有什么关系呢? VLSM是通过向子网掩码借位实现的,所以只要使用了VLSM,那么这个网络就是无类网络. 3.How is VLSM?了解了VLSM的优点和为什么要使用它,那我们就开始讲解VLSM的原理了. VLSM的原理IP地址是由网络号与主机号组成的,我们可以通过子网掩码与IP地址进行运算,那我们就可以把一个IP地址分成网络号与主机号. 如图所示,我们通过把0改成1,那么IP地址所在的IP位就从主机号,变成了网络号的一部分. 在C类网络上划分VLSM可以在哪些网络上使用? Vlsm当然可以A类B类任意网络上划分,不过一般来说C类用的更多也更直观.且在学完之后,你也可以在A类B类网络上使用VLSM了. 我现在将为你展示不同的子网掩码和它与IP地址的联系(在C类网络中). 前缀 子网掩码 能用的主机数 占用IP地址数 子网掩码(二进制) /24 0 254 256 00000000 /25 128 126 128 10000000 /26 192 62 64 11000000 /27 224 30 32 11100000 /28 240 14 16 11110000 /29 248 6 8 11111000 /30 252 2 4 11111100 我们可以根据一个路由接口所需要的主机数,去挑选一个合适大小的子网掩码给你所划分的新网络. 能不能演示一下怎么划分一个网络 好的,我现在将划分『192.168.10.0』这个大网络,把它划分成三个小网络. IP 图例 0 16 第一个网络-192.168.10.1/27 32 ——————————————— 48 64 第二个网络-192.168.10.33/27 80 ——————————————— 96 第三个网络-192.168.10.81/28 112 ——————————————— 128 144 160 176 192 … 省略 这样我就得到了三 个小网络 网络 可用IP范围 子网掩码 1 192.168.10.2-192.168.10.31 255.255.255.224 2 192.168.10.33-192.168.10.79 255.255.255.224 3 192.168.10.81-192.168.10.111 255.255.255.240 为什么可用IP范围头尾少了二个IP 你观察的真细节,确实如此,这二个IP在网络中另有他用,它们维持着网络,使网络能正常工作,所以不能把这两个IP给其它人. 划分子网的有什么规则吗? 有,每一个网络的开始IP必须是它所占有IP地址数量的整数倍,因为这样才能知道这个网络的范围与判断任意一个IP是属于哪一个网络的. 划分子网有什么技巧吗? 建议网络自大往小的分划.这样肯定可以让每一个子网的开始IP与结束IP都是相连的,可以减少因为必须是整数的开始所空置的IP. 每划分一个网络,那么就要失去一个网络的头与尾两个ip,但是如果不把网络进行划分就有254个IP可以使用,而把网络细划就会失去更多的头尾两个IP,导致可用IP比254还要少,为什么反而能节省IP地址? 确实每划分一个网络,那么这个网络就要使用两个IP去使这个网络能正常使用. 但是为什么能节省IP地址呢?那是因为路由器有一个要求,即一个路由器的两个接口是不能在同一个网络之中. 如果不使用VLSM细分网络的话,那么给一个路由器接口分配IP地址至少就要分配一个C类网络,可C类网络可是有254个IP地址可以使用呀.如果路由器用不完254个,那剩余未分配的IP地址就被空置着,且不能被其实接口的主机使用. 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。作者：HXHL链接：https://hxhl.github.io/2020/03/22/VLSM/来源：HXHL’s Blog","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"http://hxhl.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"},{"name":"CCNA","slug":"CCNA","permalink":"http://hxhl.github.io/tags/CCNA/"}]}]}